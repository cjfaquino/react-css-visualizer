{"version":3,"sources":["Components/Boxes.js","Components/ColorPicker.js","App.js","Components/WindowResize.js","serviceWorker.js","index.js"],"names":["App","props","className","style","bgStyle","useState","displayColorPicker","setDisplayColorPicker","color","styles","width","height","borderRadius","background","r","g","b","a","swatch","marginTop","padding","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","onClick","onChange","handleChange","windowSize","undefined","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","WindowResize","close","setClose","myRef","useRef","executeScroll","ref","scrollTo","current","offsetTop","setColor","color2","setColor2","color3","setColor3","useSlider","min","max","defaultState","label","id","unit","state","setSlide","type","step","value","e","target","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","borderRadiusP","borderWidth","opacity","boxShadowX","boxShadowY","boxShadowBlur","boxShadowSpread","textShadowX","textShadowY","textShadowBlur","translateX","translateY","rotateZ","rotateX","rotateY","rotateA","fontSize","fontWeight","markup","map","key","htmlFor","name","margin","slice","border","boxShadow","transform","size","textShadow","font","opacityS","backgroundColor","perspective","transition","sliderMenu","ColorPicker","rgb","icon","faBars","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f9f8ae69.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function App(props) {\n  return (\n    <div className=\"boxes\">\n      <div className=\"box\" style={props.bgStyle}>\n        <div style={props.style}>Test</div>\n        <div style={props.style}>Test</div>\n        <div style={props.style}>Test</div>\n      </div>\n      <div className=\"box\" style={props.bgStyle}>\n        <div style={props.style}>Test</div>\n        <div style={props.style}>Test</div>\n        <div style={props.style}>Test</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\n\nfunction App(props) {\n  // const [color, setColor] = useState({\n  //   r: '241',\n  //   g: '112',\n  //   b: '19',\n  //   a: '1',\n  // });\n\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const handleClick = () => {\n    setDisplayColorPicker(!displayColorPicker);\n  };\n\n  const handleClose = () => {\n    setDisplayColorPicker(false);\n  };\n\n  // const handleChange = (color) => {\n  //   setColor(color.rgb);\n  // };\n  const color = props.color;\n  const styles = {\n    color: {\n      width: '100px',\n      height: '20px',\n      borderRadius: '2px',\n      background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n    },\n    swatch: {\n      marginTop: `10px`,\n      padding: '.125em',\n      background: '#ccc',\n      borderRadius: '1px',\n      // boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n      display: 'inline-block',\n      cursor: 'pointer',\n    },\n    popover: {\n      position: 'absolute',\n      zIndex: '2',\n    },\n    cover: {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    },\n  };\n  return (\n    <div className=\"colorPicker\">\n      <div style={styles.swatch} onClick={handleClick}>\n        <div style={styles.color} />\n      </div>\n      {displayColorPicker ? (\n        <div style={styles.popover}>\n          <div style={styles.cover} onClick={handleClose} />\n          <ChromePicker color={props.color} onChange={props.handleChange} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport './Components/slider.css';\n\nimport Boxes from './Components/Boxes';\nimport WindowResize from './Components/WindowResize';\nimport ColorPicker from './Components/ColorPicker';\n\nexport default function App() {\n  const windowSize = WindowResize();\n\n  // Navbar config\n  const [close, setClose] = useState(true);\n  const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\n  // General scroll to element function\n\n  const myRef = useRef(null);\n  const executeScroll = () => scrollToRef(myRef);\n\n  //Color Picker config\n  // BOX color\n  const [color, setColor] = useState({\n    r: '116',\n    g: '179',\n    b: '233',\n    a: '1',\n  });\n\n  // background color\n  const [color2, setColor2] = useState({\n    r: '240',\n    g: '240',\n    b: '240',\n    a: '1',\n  });\n  // font color\n  const [color3, setColor3] = useState({\n    r: '255',\n    g: '255',\n    b: '255',\n    a: '1',\n  });\n\n  // Slider config\n  const useSlider = (min, max, defaultState, label, id, unit) => {\n    const [state, setSlide] = useState(defaultState);\n    const handleChange = (e) => {\n      setSlide(e.target.value);\n    };\n\n    const props = {\n      type: 'range',\n      id,\n      label,\n      min,\n      max,\n      unit,\n      step: 1,\n      value: state,\n      onChange: handleChange,\n    };\n    return props;\n  };\n\n  //create sliders\n  const marginTop = useSlider(0, 15, 2, 'Margin Top', 'marginTop', 'em'),\n    marginRight = useSlider(0, 15, 2, 'Margin Right', 'marginRight', 'em'),\n    marginBottom = useSlider(0, 15, 2, 'Margin Bottom', 'marginBottom', 'em'),\n    marginLeft = useSlider(0, 15, 2, 'Margin Left', 'marginLeft', 'em');\n\n  const paddingTop = useSlider(0, 15, 2, 'Padding Top', 'paddingTop', 'em'),\n    paddingRight = useSlider(0, 15, 2, 'Padding Right', 'paddingRight', 'em'),\n    paddingBottom = useSlider(0, 15, 2, 'Padding Bottom', 'paddingBottom', 'em'),\n    paddingLeft = useSlider(0, 15, 2, 'Padding Left', 'paddingLeft', 'em');\n\n  const borderRadiusP = useSlider(0, 50, 0, 'Border Radius', 'borderRadiusP', '%'),\n    borderWidth = useSlider(0, 50, 1, 'Border Width', 'borderWidth', 'px'),\n    opacity = useSlider(0, 1, 1, 'Opacity', 'opacity', '');\n  opacity.step = 0.01;\n\n  const boxShadowX = useSlider(-50, 50, 5, 'Shadow X', 'boxShadowX', 'px'),\n    boxShadowY = useSlider(-50, 50, 5, 'Shadow Y', 'boxShadowY', 'px'),\n    boxShadowBlur = useSlider(0, 50, 0, 'Shadow Blur', 'boxShadowBlur', 'px'),\n    boxShadowSpread = useSlider(0, 50, 0, 'Shadow Spread', 'boxShadowSpread', 'px');\n\n  const textShadowX = useSlider(-50, 50, 0, 'Shadow X', 'textShadowX', 'px'),\n    textShadowY = useSlider(-50, 50, 0, 'Shadow Y', 'textShadowY', 'px'),\n    textShadowBlur = useSlider(0, 50, 0, 'Shadow Blur', 'textShadowBlur', 'px');\n\n  const translateX = useSlider(-100, 100, 0, 'Translate X', 'translateX', 'px'),\n    translateY = useSlider(-100, 100, 0, 'Translate Y', 'translateY', 'px'),\n    rotateZ = useSlider(-1, 1, 0, 'Rotate Z', 'rotateZ', ''),\n    rotateX = useSlider(-1, 1, 0, 'Rotate X', 'rotateX', ''),\n    rotateY = useSlider(-1, 1, 0, 'Rotate Y', 'rotateY', ''),\n    rotateA = useSlider(-180, 180, 180, 'Rotate Angle', 'rotateA', 'deg');\n  rotateZ.step = rotateY.step = rotateX.step = 0.01;\n\n  const height = useSlider(0, 500, 100, 'Height', 'height', 'px'),\n    width = useSlider(0, 1500, 100, 'Width', 'width', 'px');\n\n  const fontSize = useSlider(0, 10, 1, 'Size', 'fontSize', 'em'),\n    fontWeight = useSlider(100, 900, 900, 'Weight', 'fontWeight', '');\n  fontSize.step = 0.1;\n  fontWeight.step = 100;\n\n  //array everything for markup\n  const input = [\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    borderRadiusP,\n    borderWidth,\n    boxShadowX,\n    boxShadowY,\n    boxShadowBlur,\n    boxShadowSpread,\n    translateX,\n    translateY,\n    rotateX,\n    rotateY,\n    rotateZ,\n    rotateA,\n    height,\n    width,\n    textShadowX,\n    textShadowY,\n    textShadowBlur,\n    fontSize,\n    fontWeight,\n    opacity,\n  ];\n\n  // Style markup with .map\n  const markup = input.map((e) => (\n    <div key={e.id} className=\"slider\">\n      <label htmlFor={e.id}>\n        {e.label}: {e.value}\n        {e.unit}\n      </label>\n      <div>\n        <input {...e} name={e.id} />\n      </div>\n    </div>\n  ));\n\n  //re-organize for placement in DOM\n  const margin = markup.slice(0, 4),\n    padding = markup.slice(4, 8),\n    border = markup.slice(8, 10),\n    boxShadow = markup.slice(10, 14),\n    transform = markup.slice(14, 20),\n    size = markup.slice(20, 22),\n    textShadow = markup.slice(22, 25),\n    font = markup.slice(25, 27),\n    opacityS = markup.slice(27, 28);\n\n  // box styles\n  const styles = {\n    backgroundColor: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n    margin: `${marginTop.value}em ${marginRight.value}em ${marginBottom.value}em ${marginLeft.value}em`,\n    padding: `${paddingTop.value}em ${paddingRight.value}em ${paddingBottom.value}em ${paddingLeft.value}em`,\n    borderRadius: `${borderRadiusP.value}%`,\n    border: `${borderWidth.value}px solid black`,\n    boxShadow: `${boxShadowX.value}px ${boxShadowY.value}px ${boxShadowBlur.value}px ${boxShadowSpread.value}px black`,\n    perspective: '550px',\n    transform: `translate3d(${translateX.value}px, ${translateY.value}px, -9.7rem) rotate3d(${rotateX.value}, ${rotateY.value}, ${rotateZ.value}, ${rotateA.value}deg)`,\n    height: `${height.value}px`,\n    width: `${width.value}px`,\n    transition: 'ease all 500ms',\n    textShadow: `${textShadowX.value}px ${textShadowY.value}px ${textShadowBlur.value}px black`,\n    fontSize: `${fontSize.value}em`,\n    fontWeight: `${fontWeight.value}`,\n    opacity: `${opacity.value}`,\n    color: `rgba(${color3.r}, ${color3.g}, ${color3.b}, ${color3.a})`,\n  };\n  // background style\n  const bgStyle = {\n    backgroundColor: `rgba(${color2.r}, ${color2.g}, ${color2.b}, ${color2.a})`,\n  };\n\n  const sliderMenu = (\n    <div\n      className={\n        close && windowSize.width <= 560 ? 'sliders grid container menu hidden' : 'sliders grid container menu visible'\n      }\n    >\n      <div>\n        <h3>Box-size</h3>\n        {size}\n        <h3>Font</h3>\n        {font}\n      </div>\n      <div>\n        <h3>Margin</h3>\n        {margin}\n      </div>\n      <div>\n        <h3>Padding</h3>\n        {padding}\n      </div>\n      <div>\n        <h3>Border</h3>\n        {border}\n        <h3>Opacity</h3>\n        {opacityS}\n      </div>\n      <div>\n        <h3>Text-shadow</h3>\n        {textShadow}\n      </div>\n      <div>\n        <h3>Box-shadow</h3>\n        {boxShadow}\n      </div>\n      <div>\n        <h3>Transform</h3>\n        {transform}\n      </div>\n      <div>\n        <h3 className=\"colorPicker\">\n          Box Color{' '}\n          <ColorPicker\n            setColor={color}\n            color={color}\n            handleChange={(color) => {\n              setColor(color.rgb);\n            }}\n          />\n        </h3>\n        <h3 className=\"colorPicker\">\n          Font Color{' '}\n          <ColorPicker\n            setColor={color3}\n            color={color3}\n            handleChange={(color3) => {\n              setColor3(color3.rgb);\n            }}\n          />\n        </h3>\n        <h3 className=\"colorPicker\">\n          Background Color{' '}\n          <ColorPicker\n            setColor={color2}\n            color={color2}\n            handleChange={(color2) => {\n              setColor2(color2.rgb);\n            }}\n          />\n        </h3>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <div className=\"windowSizer container\">\n        ViewPort Size: ({windowSize.width}px) x ({windowSize.height}px)\n      </div>\n      <nav className={windowSize.width <= 560 ? 'navbar' : 'hidden'}>\n        <div\n          className=\"menuIcon\"\n          onClick={() => {\n            setClose(!close);\n            close && executeScroll();\n          }}\n        >\n          <FontAwesomeIcon icon={faBars} className=\"faBars\" />\n        </div>\n      </nav>\n      <h1 ref={myRef}>CSS Visualizer</h1>\n      {/* Otherwise sliderMenu loads on page load on mobile for a brief moment*/}\n      {windowSize.width >= 560 ? sliderMenu : !close && sliderMenu}\n      <Boxes style={styles} bgStyle={bgStyle} />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}